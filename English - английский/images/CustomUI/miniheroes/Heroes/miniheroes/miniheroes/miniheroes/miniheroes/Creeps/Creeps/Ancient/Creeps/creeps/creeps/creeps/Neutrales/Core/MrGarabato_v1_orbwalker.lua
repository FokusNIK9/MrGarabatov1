MrGarabato_v1_orbwalker = {}  MrGarabato_v1_orbwalker.orbwalkerOrderTime = 0 MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime = 0 MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEnd = 0 MrGarabato_v1_orbwalker.orbwalkerMeleeAnimationEnd = 0 MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEndAlt = 0  MrGarabato_v1_orbwalker.orbwalkerAttackPoint = 0  function MrGarabato_v1_orbwalker.animationCapture(animation) 	if animation.type == 1 then 		MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime = os.clock() 		MrGarabato_v1_orbwalker.orbwalkerMeleeAnimationEnd = os.clock() + animation.castpoint 		MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEndAlt = os.clock() + animation.castpoint 	end  end  function MrGarabato_v1_orbwalker.projectileCapture(projectile)  	if projectile.isAttack then   		MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEnd = os.clock()  	end  end  function MrGarabato_v1_orbwalker.orbwalkerBackswingTimer(myHero)  	if MrGarabato_v1_orbwalker.orbwalkerAttackPoint == 0 then return 0 end  	local attackTime = NPC.GetAttackTime(myHero) 		if not attackTime then return 0 end  	return attackTime - MrGarabato_v1_orbwalker.orbwalkerAttackPoint  end  function MrGarabato_v1_orbwalker.orbwalkerInAttackAnimation()  	if MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime == 0 then return false end 	if os.clock() < MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime then return false end  	local animationEndTimer = 0 		if Heroes.GetLocal() then 			if NPC.IsRanged(Heroes.GetLocal()) then 				animationEndTimer = MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEnd 			else 				animationEndTimer = MrGarabato_v1_orbwalker.orbwalkerMeleeAnimationEnd 			end 		end  	if Heroes.GetLocal() then 		if NPC.IsRanged(Heroes.GetLocal()) then 			if os.clock() >= MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime then 				if MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime > animationEndTimer then 					if os.clock() < MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime + MrGarabato_v1_orbwalker.orbwalkerAttackPoint + 0.2 then 						return true 					end 				end	 			end 		else 			if os.clock() >= MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime then 				if os.clock() < MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime + MrGarabato_v1_orbwalker.orbwalkerAttackPoint + 0.2 then 					return true 				end 			end 		end 	end  	return false  end  function MrGarabato_v1_orbwalker.orbwalkerAwaitingAnimation()  	if MrGarabato_v1_orbwalker.orbwalkerOrderTime == 0 then return false end  	if os.clock() < MrGarabato_v1_orbwalker.orbwalkerOrderTime + 0.1 then return true end  	if os.clock() >= MrGarabato_v1_orbwalker.orbwalkerOrderTime then 		if MrGarabato_v1_orbwalker.orbwalkerOrderTime > MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime then 			return true 		end 	end  	return false  end  function MrGarabato_v1_orbwalker.orbwalkerAttackAnimationTiming()  	local startTime = MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime 		if startTime == 0 then 			return 0 		end  	local endTime = 0 		if Heroes.GetLocal() then 			if NPC.IsRanged(Heroes.GetLocal()) then 				endTime = MrGarabato_v1_orbwalker.orbwalkerRangedAnimationEndAlt 			else 				endTime = MrGarabato_v1_orbwalker.orbwalkerMeleeAnimationEnd 			end 		end  		if endTime == 0 then 			return 0 		end  	if os.clock() > endTime then return 0 end  	if endTime > startTime then 		if os.clock() >= startTime and os.clock() < endTime then 			return endTime - startTime 		end 	end  	return 0  end  function MrGarabato_v1_orbwalker.orbwalkerIsInAttackBackswing(myHero)  	if not myHero then return false end  	if MrGarabato_v1_orbwalker.orbwalkerAwaitingAnimation() == true then return false end 	if MrGarabato_v1_orbwalker.orbwalkerInAttackAnimation() == true then return false end  	local backswingTimer = MrGarabato_v1_orbwalker.orbwalkerBackswingTimer(myHero)  	local attackTime = NPC.GetAttackTime(myHero)  	if os.clock() < MrGarabato_v1_orbwalker.orbwalkerAnimationCaptureTime + attackTime then 		return true 	end  	return false  end return MrGarabato_v1_orbwalker