local AutoBroodmother = {} Log.Write("Loaded script: Broodmother.lua")    Menu.AddMenuIcon({"MrGarabato", " Select Hero" }, "panorama/images/heroes/icons/npc_dota_hero_broodmother_png.vtex_c")   AutoBroodmother.FarmKey = Menu.AddKeyOption({"MrGarabato", " Select Hero" }, "Spin web Detect Key", Enum.ButtonCode.KEY_F) Menu.AddOptionIcon(AutoBroodmother.FarmKey, "panorama/images/spellicons/broodmother_spin_web_png.vtex_c")  AutoBroodmother.optionTarget = Menu.AddOptionSlider({"MrGarabato", " Select Hero" }, "Target Radius", 200, 1000, 500) AutoBroodmother.optionTargetStyle = Menu.AddOptionCombo({"MrGarabato", " Select Hero"}, "Target Style", {"Free Target", "Lock Target"}, 1)  Menu.AddMenuIcon({"MrGarabato", " Select Hero" , "Skill"}, "panorama/images/icon_plus_white_png.vtex_c") AutoBroodmother.optionSkill1 = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Skill" }, "Kill Spawn Spiderlings", false) Menu.AddOptionIcon(AutoBroodmother.optionSkill1, "panorama/images/spellicons/broodmother_spawn_spiderlings_png.vtex_c")  AutoBroodmother.optionSkill4 = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Skill" }, "Insatiable Hunger", false) Menu.AddOptionIcon(AutoBroodmother.optionSkill4, "panorama/images/spellicons/broodmother_insatiable_hunger_png.vtex_c")  Menu.AddMenuIcon({"MrGarabato", " Select Hero" ,"Items"}, "panorama/images/icon_plus_white_png.vtex_c") AutoBroodmother.optionitem = Menu.AddOptionBool({"MrGarabato", " Select Hero" ,"Items"}, "ENABLE", false) Menu.AddOptionIcon(AutoBroodmother.optionitem, "panorama/images/items/branches_png.vtex_c")  AutoBroodmother.optionEnableBlink = Menu.AddOptionBool({ "MrGarabato", " Select Hero" ,"Items"},"Use Blink",false) Menu.AddOptionIcon(AutoBroodmother.optionEnableBlink, "panorama/images/items/blink_png.vtex_c")  AutoBroodmother.optionBkb  = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "BkB", false) Menu.AddOptionIcon(AutoBroodmother.optionBkb, "panorama/images/items/black_king_bar_png.vtex_c")  AutoBroodmother.optionAbyssal  = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Abyssal Blade", false) Menu.AddOptionIcon(AutoBroodmother.optionAbyssal, "panorama/images/items/abyssal_blade_png.vtex_c")  AutoBroodmother.optionSilence = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Orchid", false) Menu.AddOptionIcon(AutoBroodmother.optionSilence, "panorama/images/items/orchid_png.vtex_c")  AutoBroodmother.optionbloodthorn = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Bloodthorn", false) Menu.AddOptionIcon(AutoBroodmother.optionbloodthorn, "panorama/images/items/bloodthorn_png.vtex_c")  AutoBroodmother.optionNullifier  = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Nullifier", false) Menu.AddOptionIcon(AutoBroodmother.optionNullifier, "panorama/images/items/nullifier_png.vtex_c")  AutoBroodmother.optionMom  = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Mask of Madness", false) Menu.AddOptionIcon(AutoBroodmother.optionMom, "panorama/images/items/mask_of_madness_png.vtex_c")  AutoBroodmother.optionEnableHex = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Hex", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableHex, "panorama/images/items/sheepstick_png.vtex_c")   AutoBroodmother.optionEnableHH = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Heaven's Halberd", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableHH, "panorama/images/items/heavens_halberd_png.vtex_c")  AutoBroodmother.optionEnableDiffusal = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Diffusal", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableDiffusal, "panorama/images/items/diffusal_blade_png.vtex_c")  AutoBroodmother.optionEnableMedallion = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Medallion of Courage", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableMedallion, "panorama/images/items/medallion_of_courage_png.vtex_c")  AutoBroodmother.optionEnableSolar = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Solar Crest", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableSolar, "panorama/images/items/solar_crest_png.vtex_c")  AutoBroodmother.optionEnableRod = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Items"}, "Rod of Atos", false) Menu.AddOptionIcon(AutoBroodmother.optionEnableRod, "panorama/images/items/rod_of_atos_png.vtex_c")     Menu.AddMenuIcon({"MrGarabato", " Select Hero" , "Linken"}, "panorama/images/icon_plus_white_png.vtex_c") Menu.AddMenuIcon({"MrGarabato", " Select Hero" , "Linken"}, "panorama/images/items/sphere_png.vtex_c")  AutoBroodmother.optionLinken = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "ENABLE", false) Menu.AddOptionIcon(AutoBroodmother.optionLinken, "panorama/images/items/branches_png.vtex_c")   AutoBroodmother.optionLinkenHex = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Hex", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenHex, "panorama/images/items/sheepstick_png.vtex_c")  AutoBroodmother.optionLinkenOrchid = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Orchid", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenOrchid, "panorama/images/items/orchid_png.vtex_c")  AutoBroodmother.optionLinkenBloodthorn = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Bloodthorn", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenBloodthorn, "panorama/images/items/bloodthorn_png.vtex_c")  AutoBroodmother.optionLinkenEul = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Eul", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenEul, "panorama/images/items/cyclone_png.vtex_c")  AutoBroodmother.optionLinkenHH = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Heaven's Halberd", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenHH, "panorama/images/items/heavens_halberd_png.vtex_c")  AutoBroodmother.optionLinkenDiffusal = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Diffusal", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenDiffusal, "panorama/images/items/diffusal_blade_png.vtex_c")  AutoBroodmother.optionLinkenForce = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Force Staff", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenForce, "panorama/images/items/force_staff_png.vtex_c")  AutoBroodmother.optionLinkenPike = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Hurricane Pike", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenPike, "panorama/images/items/hurricane_pike_png.vtex_c")    AutoBroodmother.optionLinkenNullifier = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Nullifier", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenNullifier, "panorama/images/items/nullifier_png.vtex_c")  AutoBroodmother.optionLinkenRod = Menu.AddOptionBool({"MrGarabato", " Select Hero" , "Linken"}, "Rod", false) Menu.AddOptionIcon(AutoBroodmother.optionLinkenRod, "panorama/images/items/rod_of_atos_png.vtex_c")    Menu.AddOptionIcon(AutoBroodmother.optionMom, "panorama/images/items/mask_of_madness_png.vtex_c") AutoBroodmother.Font = Renderer.LoadFont("Tahoma", 24, Enum.FontWeight.EXTRABOLD)  local enemy local myPlayer, myTeam, myMana, myFaction, attackRange, myPos, myBase, enemyBase, enemyPosition   AutoBroodmother.ProjectileTime = 0 AutoBroodmother.ItemUseTime = 0 AutoBroodmother.HeroAbilityUseTime = 0 AutoBroodmother.UnitAbilityUseTime = 0 AutoBroodmother.Delay = .05 AutoBroodmother.StunTime = 0 AutoBroodmother.StunDuration = 0 AutoBroodmother.AttackOrderTime = 0 AutoBroodmother.MoveOrderTime = 0 AutoBroodmother.FarmManaThreshold = 0.35 AutoBroodmother.CircleDrawTime = 0 AutoBroodmother.OrbWalkTime = 0 AutoBroodmother.CheckDeadTime = 0  AutoBroodmother.MoveNPCOrderTime = 0 AutoBroodmother.AttackNPCOrderTime = 0 AutoBroodmother.ReadyToInvisTime = nil AutoBroodmother.NeutralToBuffWithOgre = nil AutoBroodmother.HeroToBuffWithPriest = nil AutoBroodmother.HeroToBuffWithOgre = nil AutoBroodmother.HeroToBuffWithLizard = nil  function AutoBroodmother.OnGameStart()   AutoBroodmother.ProjectileTime = 0   AutoBroodmother.ItemUseTime = 0   AutoBroodmother.HeroAbilityUseTime = 0   AutoBroodmother.UnitAbilityUseTime = 0   AutoBroodmother.StunTime = 0   AutoBroodmother.StunDuration = 0   AutoBroodmother.AttackOrderTime = 0   AutoBroodmother.MoveOrderTime = 0   AutoBroodmother.FarmManaThreshold = 0.35   AutoBroodmother.CircleDrawTime = 0   AutoBroodmother.OrbWalkTime = 0   AutoBroodmother.CheckDeadTime = 0    AutoBroodmother.MoveNPCOrderTime = 0   AutoBroodmother.AttackNPCOrderTime = 0   AutoBroodmother.ReadyToInvisTime = nil   AutoBroodmother.NeutralToBuffWithOgre = nil   AutoBroodmother.HeroToBuffWithPriest = nil   AutoBroodmother.HeroToBuffWithOgre = nil   AutoBroodmother.HeroToBuffWithLizard = nil end  function AutoBroodmother.OnUpdate() 	if not Menu.IsEnabled(MrGarabato_v1_MenuHx.optionEnable) then return true end     if not Menu.IsEnabled(MrGarabato_v1_MenuHx.EnableHero) then return end	     local myHero = Heroes.GetLocal()     if NPC.GetUnitName(myHero) ~= "npc_dota_hero_broodmother" then return end       local myMana = NPC.GetMana(myHero)   local myStr = Hero.GetStrengthTotal(myHero)   local myAgi = Hero.GetAgilityTotal(myHero)   local myInt = Hero.GetIntellectTotal(myHero)   local spawn_spiderlings = NPC.GetAbility(myHero, "broodmother_spawn_spiderlings")   local incapacitating_bite = NPC.GetAbility(myHero, "broodmother_incapacitating_bite")   local insatiable_hunger = NPC.GetAbility(myHero, "broodmother_insatiable_hunger")   local spiderling_dmg_plus_60 = NPC.GetAbility(myHero, "special_bonus_unique_broodmother_3")   local cooldown_reduction_20_percent = NPC.GetAbility(myHero, "special_bonus_cooldown_reduction_20")   local bonus_hp_250 = NPC.GetAbility(myHero, "special_bonus_hp_250")   local spider_attack_dmg_plus_12 = NPC.GetAbility(myHero, "special_bonus_unique_broodmother_4")   local special_bonus_attack_speed_70 = NPC.GetAbility(myHero, "special_bonus_attack_speed_70")   local plus_8_max_webs = NPC.GetAbility(myHero, "special_bonus_unique_broodmother_1")   local plus_225_spiders_health = NPC.GetAbility(myHero, "special_bonus_unique_broodmother_2")   local spawn_spiderlings_cast_range = 700   local spawn_spiderlings_dmg = nil   local spin_web_cast_range = 1000   local item_aether_lens = NPC.GetItem(myHero, "item_aether_lens", true)    local item_blink = NPC.GetItem(myHero, "item_blink", true)   local mom = NPC.GetItem(myHero, "item_mask_of_madness", true)   local urn = NPC.GetItem(myHero, "item_urn_of_shadows", true)   local vessel = NPC.GetItem(myHero, "item_spirit_vessel", true)   local hex = NPC.GetItem(myHero, "item_sheepstick", true)   local nullifier = NPC.GetItem(myHero, "item_nullifier", true)   local diffusal = NPC.GetItem(myHero, "item_diffusal_blade", true)   local mjolnir = NPC.GetItem(myHero, "item_mjollnir", true)   local halberd = NPC.GetItem(myHero, "item_heavens_halberd", true)   local abyssal = NPC.GetItem(myHero, "item_abyssal_blade", true)   local armlet = NPC.GetItem(myHero, "item_armlet", true)   local bloodthorn = NPC.GetItem(myHero, "item_bloodthorn", true)   local bkb = NPC.GetItem(myHero, "item_black_king_bar", true)   local courage = NPC.GetItem(myHero, "item_medallion_of_courage", true)   local solar = NPC.GetItem(myHero, "item_solar_crest", true)   local blademail = NPC.GetItem(myHero, "item_blade_mail", true)   local orchid = NPC.GetItem(myHero, "item_orchid", true)   local lotus = NPC.GetItem(myHero, "item_lotus_orb", true)   local cyclone = NPC.GetItem(myHero, "item_cyclone", true)   local satanic = NPC.GetItem(myHero, "item_satanic", true)   local force = NPC.GetItem(myHero, "item_force_staff", true)   local pike = NPC.GetItem(myHero, "item_hurricane_pike", true)   local eblade = NPC.GetItem(myHero, "item_ethereal_blade", true)   local phase = NPC.GetItem(myHero, "item_phase_boots", true)   local	medallion = NPC.GetItem(myHero, "item_medallion_of_courage")   local	rod = NPC.GetItem(myHero, "item_rod_of_atos")   local solar = NPC.GetItem(myHero, "item_solar_crest")   local	hh = NPC.GetItem(myHero, "item_heavens_halberd")   local eul = NPC.GetItem(myHero, "item_cyclone")   local diffusal = NPC.GetItem(myHero, "item_diffusal_blade")   local dagon = NPC.GetItem(myHero, "item_dagon", true)   if not dagon then     for i = 2, 5 do       local dagon = NPC.GetItem(myHero, "item_dagon_" .. i, true)       if dagon then break end     end   end   local discord = NPC.GetItem(myHero, "item_veil_of_discord", true)   local shiva = NPC.GetItem(myHero, "item_shivas_guard", true)   local refresher = NPC.GetItem(myHero, "item_refresher", true)   local soulring = NPC.GetItem(myHero, "item_soul_ring", true)   local manta = NPC.GetItem(myHero, "item_manta", true)   local necro = NPC.GetItem(myHero, "item_necronomicon", true)   if not necro then     for i = 2, 3 do       local necro = NPC.GetItem(myHero, "item_necronomicon_" .. i, true)       if necro then break end     end   end   local silver = NPC.GetItem(myHero, "item_silver_edge", true)   local scptr = NPC.GetItem(myHero, "item_ultimate_scepter", true)    enemy = AutoBroodmother.Target(myHero)   local mousePos = Input.GetWorldCursorPos()   local attackPoint = 0.4   local mySpellAmp = 1 + (myInt * 0.07142857142) / 100    if item_aether_lens then     spawn_spiderlings_cast_range = spawn_spiderlings_cast_range + 220     spin_web_cast_range = spin_web_cast_range + 220   end    if Ability.GetLevel(spawn_spiderlings) > 0 then     spawn_spiderlings_dmg = Ability.GetLevel(spawn_spiderlings) * 70     if Ability.GetLevel(spiderling_dmg_plus_60) > 0 then       spawn_spiderlings_dmg = spawn_spiderlings_dmg + 60     end     if mySpellAmp then       spawn_spiderlings_dmg = spawn_spiderlings_dmg * mySpellAmp     end   end     	myTeam = Entity.GetTeamNum(myHero) 	if myTeam == 2 then  		myBase = Vector(-7328.000000, -6816.000000, 512.000000) 		enemyBase = Vector(7141.750000, 6666.125000, 512.000000) 		myFaction = "radiant" 	else 		myBase = Vector(7141.750000, 6666.125000, 512.000000) 		enemyBase = Vector(-7328.000000, -6816.000000, 512.000000) 		myFaction = "dire" 	end  	if AutoBroodmother.IsLinkensProtected(enemy) and Menu.IsEnabled(AutoBroodmother.optionLinken) and not NPC.HasState(enemy, Enum.ModifierState.MODIFIER_STATE_MAGIC_IMMUNE) then 		AutoBroodmother.PoopLinken() 	end 	 	if Menu.IsKeyDown(MrGarabato_v1_MenuHx.optionComboKey) then 	    if Menu.GetValue(AutoBroodmother.optionTargetStyle) == 1 and not enemy  then 			enemy = Input.GetNearestHeroToCursor(myTeam, Enum.TeamType.TEAM_ENEMY) 		elseif Menu.GetValue(AutoBroodmother.optionTargetStyle) == 0 then 			enemy = Input.GetNearestHeroToCursor(myTeam, Enum.TeamType.TEAM_ENEMY) 		end 		if enemy and Entity.IsAlive(enemy) then 			enemyPosition = Entity.GetAbsOrigin(enemy)     enemy = AutoBroodmother.Target(myHero) 	Player.AttackTarget(Players.GetLocal(), myHero, enemy, false) 	if Menu.IsEnabled(AutoBroodmother.optionEnableBlink) and item_blink and Ability.IsCastable(item_blink, myMana) and Ability.IsReady(item_blink) then distance = (Entity.GetAbsOrigin(enemy) - Entity.GetAbsOrigin(myHero)):Length2D() if distance>1200 then Player.PrepareUnitOrders(Players.GetLocal(), Enum.UnitOrder.DOTA_UNIT_ORDER_MOVE_TO_POSITION,enemy, Entity.GetAbsOrigin(enemy), nil, Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY, myHero) else  Ability.CastPosition(item_blink, Entity.GetAbsOrigin(enemy)) return end end 	if Menu.IsEnabled(AutoBroodmother.optionbloodthorn) and bloodthorn and Ability.IsCastable(bloodthorn,myMana) and Ability.IsReady(bloodthorn) then Ability.CastTarget(bloodthorn, enemy) end if Menu.IsEnabled(AutoBroodmother.optionSilence) and orchid and Ability.IsCastable(orchid,myMana) and Ability.IsReady(orchid) then Ability.CastTarget(orchid, enemy) end 	if Menu.IsEnabled(AutoBroodmother.optionEnableDiffusal) and diffusal and  Ability.IsCastable(diffusal, 0) and Ability.IsReady(diffusal) then Ability.CastTarget(diffusal, enemy) end 	if Menu.IsEnabled(AutoBroodmother.optionEnableRod) and rod and Ability.IsCastable(rod,myMana) and Ability.IsReady(rod) then Ability.CastTarget(rod, enemy) end 	if Menu.IsEnabled(AutoBroodmother.optionEnableMedallion) and medallion  and Ability.IsCastable(medallion, myMana) and Ability.IsReady(medallion) then Ability.CastTarget(medallion, enemy) end 	if Menu.IsEnabled(AutoBroodmother.optionEnableSolar) and solar and  Ability.IsCastable(solar, myMana) and Ability.IsReady(solar) then Ability.CastTarget(solar, enemy) end 	 	if Menu.IsEnabled(AutoBroodmother.optionEnableHex) and hex and Ability.IsCastable(hex, myMana) and NPC.IsEntityInRange(enemy, myHero, Ability.GetCastRange(hex) - 10) then Ability.CastTarget(hex, enemy); return end 	if Menu.IsEnabled(AutoBroodmother.optionBkb) and bkb and Ability.IsCastable(bkb, myMana) and Ability.IsReady(bkb) then Ability.CastNoTarget(bkb) return end 	if Menu.IsEnabled(AutoBroodmother.optionNullifier) and nullifier and Ability.IsCastable(nullifier, myMana) and Ability.IsReady(nullifier) then Ability.CastTarget(nullifier, enemy)  return end     if Menu.IsEnabled(AutoBroodmother.optionMom) and mom and Ability.IsCastable(mom, myMana) and Ability.IsReady(mom) then Ability.CastNoTarget(mom) return end 	if Menu.IsEnabled(AutoBroodmother.optionAbyssal) and abyssal and Ability.IsCastable(abyssal, myMana) and Ability.IsReady(abyssal) and not NPC.HasState(enemy, Enum.ModifierState.MODIFIER_STATE_STUNNED) and not NPC.HasState(enemy, Enum.ModifierState.MODIFIER_STATE_HEXED) then Ability.CastTarget(abyssal, enemy) return end 	if Menu.IsEnabled(AutoBroodmother.optionSkill4) and insatiable_hunger and Ability.IsCastable(insatiable_hunger, myMana) and Ability.IsReady(insatiable_hunger) and not Ability.IsInAbilityPhase(insatiable_hunger) and NPC.IsEntityInRange(myHero, enemy, 500) then  Ability.CastNoTarget(insatiable_hunger) end 	end    end 	local myMana = NPC.GetMana(Heroes.GetLocal()) 	local spin_web = NPC.GetAbility(Heroes.GetLocal(), "broodmother_spin_web") 	  	local myPos = Entity.GetAbsOrigin(Heroes.GetLocal())   	if Menu.IsKeyDown(AutoBroodmother.FarmKey) then 	if spin_web and Ability.IsCastable(spin_web, myMana) then Ability.CastPosition(spin_web, myPos); return end end end  function AutoBroodmother.PoopLinken(exception) 	if Menu.IsEnabled(AutoBroodmother.optionLinkenHex) and hex and Ability.IsCastable(hex,myMana) then 		Ability.CastTarget(hex, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenOrchid) and orchid and Ability.IsCastable(orchid,myMana) then 		Ability.CastTarget(orchid, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenForce) and force and Ability.IsCastable(force,myMana) then 		Ability.CastTarget(force, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenPike) and pike and Ability.IsCastable(pike,myMana) then 		Ability.CastTarget(pike, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenBloodthorn) and bloodthorn and Ability.IsCastable(bloodthorn,myMana) then 		Ability.CastTarget(bloodthorn, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenEul) and eul and Ability.IsCastable(eul,myMana) and eul ~= exception then 		Ability.CastTarget(eul, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenDiffusal) and diffusal and Ability.IsCastable(diffusal, 0) then 		Ability.CastTarget(diffusal, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenMedallion) and medallion and Ability.IsCastable(medallion,myMana) then 		Ability.CastTarget(medallion, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenNullifier) and nullifier and Ability.IsCastable(nullifier,myMana) then 		Ability.CastTarget(nullifier, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenRod) and rod and Ability.IsCastable(rod,myMana) then 		Ability.CastTarget(rod, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenSolar) and solar and Ability.IsCastable(solar,myMana) then 		Ability.CastTarget(solar, enemy) 		return 	end 	if Menu.IsEnabled(AutoBroodmother.optionLinkenHH) and hh and Ability.IsCastable(hh,myMana) then 		Ability.CastTarget(hh, enemy) 		return 	end end  function AutoBroodmother.IsLinkensProtected(npc) 	if NPC.IsLinkensProtected(npc) then 		return true 	end end  function AutoBroodmother.Target(myHero)   if not myHero then return end   enemy = Input.GetNearestHeroToCursor(Entity.GetTeamNum(myHero), Enum.TeamType.TEAM_ENEMY)   if not enemy then return end   local targetingRange = Menu.GetValue(AutoBroodmother.optionTarget)   local mousePos = Input.GetWorldCursorPos()   local enemyDist = (Entity.GetAbsOrigin(enemy) - mousePos):Length2D()   if enemyDist < targetingRange then      return enemy   else     return mousePos   end end   return AutoBroodmother